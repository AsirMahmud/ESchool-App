# Generated by Django 5.2.5 on 2025-09-04 04:55

import django.db.models.deletion
from django.db import migrations, models


def ensure_all_subjects_have_level(apps, schema_editor):
    """Ensure all subjects have a level before making field non-nullable"""
    Subject = apps.get_model('subject', 'Subject')
    Level = apps.get_model('level', 'Level')
    
    # Get the first available level as fallback
    first_level = Level.objects.first()
    
    if first_level:
        # Update any subjects that still don't have a level
        subjects_without_level = Subject.objects.filter(level__isnull=True)
        if subjects_without_level.exists():
            subjects_without_level.update(level=first_level)


def reverse_ensure_all_subjects_have_level(apps, schema_editor):
    """Reverse operation - no action needed"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('level', '0003_alter_levelsubject_level'),
        ('subject', '0003_auto_20250904_1052'),
    ]

    operations = [
        migrations.RunPython(ensure_all_subjects_have_level, reverse_ensure_all_subjects_have_level),
        migrations.AlterField(
            model_name='subject',
            name='level',
            field=models.ForeignKey(help_text='Level this subject is for', on_delete=django.db.models.deletion.CASCADE, related_name='direct_subjects', to='level.level'),
        ),
    ]
