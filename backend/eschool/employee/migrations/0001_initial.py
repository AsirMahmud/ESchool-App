# Generated by Django 5.2.5 on 2025-09-01 14:04

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('department', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique employee ID', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Full name of the employee', max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('email', models.EmailField(help_text='Email address', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(help_text='Contact phone number', max_length=15)),
                ('position', models.CharField(help_text='Job position/title', max_length=100)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('teacher', 'Teacher'), ('staff', 'Staff'), ('principal', 'Principal'), ('vice_principal', 'Vice Principal'), ('coordinator', 'Coordinator'), ('librarian', 'Librarian'), ('counselor', 'Counselor'), ('nurse', 'Nurse'), ('security', 'Security'), ('maintenance', 'Maintenance'), ('cleaner', 'Cleaner')], help_text='Employee role in the organization', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('terminated', 'Terminated'), ('on_leave', 'On Leave')], default='active', help_text='Current employment status', max_length=20)),
                ('join_date', models.DateField(help_text='Date when employee joined')),
                ('teacher_room', models.CharField(blank=True, help_text='Room number for teachers', max_length=50, null=True)),
                ('about', models.TextField(blank=True, help_text='About the employee', null=True)),
                ('education', models.TextField(blank=True, help_text='Educational background', null=True)),
                ('skills', models.TextField(blank=True, help_text='Skills and competencies', null=True)),
                ('experience', models.TextField(blank=True, help_text='Work experience', null=True)),
                ('certification', models.TextField(blank=True, help_text='Professional certifications', null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, help_text='Employee salary', max_digits=10, null=True)),
                ('address', models.TextField(blank=True, help_text='Home address', null=True)),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact person', max_length=100, null=True)),
                ('emergency_phone', models.CharField(blank=True, help_text='Emergency contact phone', max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, help_text='Department the employee belongs to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='department.department')),
                ('user', models.OneToOneField(blank=True, help_text='Associated Django user account', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'db_table': 'employees',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text='Start date in department')),
                ('end_date', models.DateField(blank=True, help_text='End date in department (null if current)', null=True)),
                ('position', models.CharField(help_text='Position held in this department', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of work done', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(help_text='Department where employee worked', on_delete=django.db.models.deletion.CASCADE, related_name='employee_experiences', to='department.department')),
                ('employee', models.ForeignKey(help_text='Employee for this experience record', on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='employee.employee')),
            ],
            options={
                'verbose_name': 'Employee Experience',
                'verbose_name_plural': 'Employee Experiences',
                'db_table': 'employee_experiences',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Attendance date')),
                ('check_in_time', models.TimeField(blank=True, help_text='Check-in time', null=True)),
                ('check_out_time', models.TimeField(blank=True, help_text='Check-out time', null=True)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('half_day', 'Half Day'), ('on_leave', 'On Leave')], default='present', help_text='Attendance status', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(help_text='Employee for this attendance record', on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employee.employee')),
            ],
            options={
                'verbose_name': 'Employee Attendance',
                'verbose_name_plural': 'Employee Attendance Records',
                'db_table': 'employee_attendance',
                'ordering': ['-date', 'employee'],
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
