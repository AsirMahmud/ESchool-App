# Generated by Django 5.2.5 on 2025-09-01 14:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Level',
            fields=[
                ('level_no', models.PositiveIntegerField(help_text='Level number (1-12)', primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('level_name', models.CharField(help_text='Name of the level (e.g., Grade 1, Class 5)', max_length=50)),
                ('level_type', models.CharField(choices=[('elementary', 'Elementary'), ('middle', 'Middle School'), ('high', 'High School'), ('pre_k', 'Pre-Kindergarten'), ('kindergarten', 'Kindergarten')], help_text='Type of academic level', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the level', null=True)),
                ('age_range_min', models.PositiveIntegerField(blank=True, help_text='Minimum age for this level', null=True, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)])),
                ('age_range_max', models.PositiveIntegerField(blank=True, help_text='Maximum age for this level', null=True, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this level is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Level',
                'verbose_name_plural': 'Levels',
                'db_table': 'levels',
                'ordering': ['level_no'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sec_no', models.CharField(help_text='Section number/identifier (e.g., A, B, 1, 2)', max_length=10)),
                ('section_name', models.CharField(help_text='Full section name (e.g., Grade 1-A, Class 5-B)', max_length=50)),
                ('section_type', models.CharField(choices=[('regular', 'Regular'), ('advanced', 'Advanced'), ('remedial', 'Remedial'), ('special', 'Special Needs')], default='regular', help_text='Type of section', max_length=20)),
                ('max_students', models.PositiveIntegerField(default=30, help_text='Maximum number of students allowed in this section', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this section is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'db_table': 'sections',
                'ordering': ['level', 'sec_no'],
            },
        ),
        migrations.CreateModel(
            name='LevelSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_compulsory', models.BooleanField(default=True, help_text='Whether this subject is compulsory for this level')),
                ('weekly_hours', models.PositiveIntegerField(default=1, help_text='Number of hours per week for this subject', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this subject is currently active for this level')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('level', models.ForeignKey(help_text='Level this subject belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='level.level')),
            ],
            options={
                'verbose_name': 'Level Subject',
                'verbose_name_plural': 'Level Subjects',
                'db_table': 'level_subjects',
            },
        ),
    ]
