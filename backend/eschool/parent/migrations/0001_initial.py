# Generated by Django 5.2.5 on 2025-09-01 14:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Full name of the parent/guardian', max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('email', models.EmailField(help_text='Email address', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(help_text='Primary contact phone number', max_length=15)),
                ('alternate_phone', models.CharField(blank=True, help_text='Alternate contact phone number', max_length=15, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], help_text='Gender', max_length=10)),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of birth', null=True)),
                ('occupation', models.CharField(choices=[('employed', 'Employed'), ('self_employed', 'Self Employed'), ('business', 'Business'), ('professional', 'Professional'), ('government', 'Government Employee'), ('private', 'Private Sector'), ('unemployed', 'Unemployed'), ('retired', 'Retired'), ('student', 'Student'), ('other', 'Other')], help_text='Occupation type', max_length=50)),
                ('job_title', models.CharField(blank=True, help_text='Job title or profession', max_length=100, null=True)),
                ('workplace', models.CharField(blank=True, help_text='Name of workplace or company', max_length=200, null=True)),
                ('address', models.TextField(help_text='Home address')),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact person', max_length=100, null=True)),
                ('emergency_phone', models.CharField(blank=True, help_text='Emergency contact phone', max_length=15, null=True)),
                ('is_primary_contact', models.BooleanField(default=False, help_text='Whether this is the primary contact for the family')),
                ('is_emergency_contact', models.BooleanField(default=True, help_text='Whether this person can be contacted in emergencies')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the parent/guardian', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parent/Guardian',
                'verbose_name_plural': 'Parents/Guardians',
                'db_table': 'parents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_number', models.PositiveIntegerField(help_text='Installment number')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Installment amount', max_digits=10)),
                ('due_date', models.DateField(help_text='Due date for this installment')),
                ('payment_date', models.DateField(blank=True, help_text='Date when this installment was paid', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('partial', 'Partially Paid'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Status of this installment', max_length=20)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('online', 'Online Payment'), ('other', 'Other')], help_text='Method of payment for this installment', max_length=20, null=True)),
                ('transaction_id', models.CharField(blank=True, help_text='Transaction ID for this installment', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, help_text='Notes for this installment', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment History',
                'verbose_name_plural': 'Payment History',
                'db_table': 'payment_history',
                'ordering': ['payment', 'installment_number'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('pay_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('tuition', 'Tuition Fee'), ('transport', 'Transport Fee'), ('library', 'Library Fee'), ('laboratory', 'Laboratory Fee'), ('sports', 'Sports Fee'), ('examination', 'Examination Fee'), ('development', 'Development Fee'), ('other', 'Other')], help_text='Type of payment', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10)),
                ('due_date', models.DateField(help_text='Due date for payment')),
                ('payment_date', models.DateField(blank=True, help_text='Date when payment was made', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('partial', 'Partially Paid'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Payment status', max_length=20)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('online', 'Online Payment'), ('other', 'Other')], help_text='Method of payment', max_length=20, null=True)),
                ('transaction_id', models.CharField(blank=True, help_text='Transaction ID or reference number', max_length=100, null=True)),
                ('academic_year', models.CharField(help_text='Academic year for this payment', max_length=10)),
                ('semester', models.CharField(blank=True, help_text='Semester (if applicable)', max_length=20, null=True)),
                ('description', models.TextField(blank=True, help_text='Payment description or notes', null=True)),
                ('late_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Late fee amount', max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount amount', max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount including fees and discounts', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(help_text='Parent making the payment', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='parent.parent')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payments',
                'ordering': ['-due_date'],
            },
        ),
    ]
